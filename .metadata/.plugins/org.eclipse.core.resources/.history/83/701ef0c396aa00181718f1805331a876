package com.git.test.java;

import java.util.Arrays;
import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;

public class StreamsAnyMatch {
	
	 public static void main(String[] args)
	 {
	        List<String> avoidWordList = Arrays.asList("one", "two");
	        List<String> allWordsList = Arrays.asList("There were two people who always said one thing over and over.");
	 
	      // approach 1
	        allWordsList.stream() 
            .filter(word -> !avoidWordList 
            .stream().collect(Collectors.toSet()) 
            .contains(word)).collect(Collectors.toList()) 
            .forEach(System.out::println); 
	 
	      // approach 2
	        allWordsList.stream().filter(str1 ->
	                avoidWordList.stream().collect(Collectors.toSet())
	                        .contains(str1)).collect(Collectors.toList())
	                .forEach(System.out::println);
	 
	    //approach 3
	        Set<String> avoidWords =
	                avoidWordList.stream()
	                        .collect(Collectors.toSet());
	 
	                allWordsList.stream()
	                        .filter(e -> allWordsList.contains(avoidWordList))
	                        .collect(Collectors.toList()).forEach(System.out::println);
	    }
}
